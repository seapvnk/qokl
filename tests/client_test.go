package tests

import (
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"

	"github.com/seapvnk/qokl/core"
	"github.com/seapvnk/qokl/server"
)

func setupTestClientServer(t *testing.T) http.Handler {
	core.InitWS()
	srv := server.New("./")
	return srv.Router
}

// Checks if an HTML route can be served
func TestClientRouteCanGet(t *testing.T) {
	router := setupTestClientServer(t)

	req := httptest.NewRequest("GET", "/", nil)
	resp := httptest.NewRecorder()

	router.ServeHTTP(resp, req)

	if resp.Code != http.StatusOK {
		t.Errorf("Expected status 200 OK, got %d", resp.Code)
	}

	expected := "<h1>this is my index</h1>"
	if !strings.Contains(resp.Body.String(), expected) {
		t.Errorf("Expected HTML response to contain %q, got %q", expected, resp.Body.String())
	}
}

// Checks if an HTML generated by code route can be served
func TestClientRouteLispCanGet(t *testing.T) {
	router := setupTestClientServer(t)

	req := httptest.NewRequest("GET", "/hello-lisp", nil)
	resp := httptest.NewRecorder()

	router.ServeHTTP(resp, req)

	if resp.Code != http.StatusOK {
		t.Errorf("Expected status 200 OK, got %d", resp.Code)
	}

	expected := "<html><head><style>html {background: #BBC2ED; color: #fefefe}</style></head><body><h1>hello</h1><h2>from lisp</h2></body></html>"
	if !strings.Contains(resp.Body.String(), expected) {
		t.Errorf("Expected HTML response to contain %q, got %q", expected, resp.Body.String())
	}
}
